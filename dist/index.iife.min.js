(function(){'use strict';var a=Number.parseInt,d=Math.min,e=Math.max,f=Number.isNaN,j=Math.PI;const c=220,h=110,g=0.0556434,k=0.2040259,l=1.0572252,m=-0.969266,n=1.8760108,o=0.041556,p=0.5,q=60,r=120,t=180,u=240,w=255,s=134,v=360,D=100,C=3.2404542,E=1.5371385,F=0.4985314,I=12.92,J=1.055,K=0.055,i=0.04045,L=0.0031308,A=2.4,M=1/2.4,N=4/29,O=6/29,P=3*O**2,H=O**3,Q=1/3,S=500,T=0.95047,U=3,W=16,$=116,_=200,aa=1.08883,x=(c,d,e)=>{const[b,f,g]=V(c,d,e),h=b<=i?b/I:((b+K)/J)**A,j=f<=i?f/I:((f+K)/J)**A,a=g<=i?g/I:((g+K)/J)**A,k=(0.4124564*h+0.3575761*j+0.1804375*a)/T,l=0.2126729*h+0.7151522*j+0.072175*a,m=(0.0193339*h+0.119192*j+0.9503041*a)/aa,n=k>H?k**Q:k/P+N,o=l>H?l**Q:l/P+N,p=m>H?m**Q:m/P+N;return[$*o-W,S*(n-o),_*(o-p)]},V=(...a)=>a.map((a)=>a/w);var b=[['hcl',(a,b,h,i,p,q)=>{const r=i*s,c=h*v*(j/180),t=Math.cos(c)*r,u=Math.sin(c)*r,A=(p*D+W)/$,y=f(t)?A:A+t/S,x=f(u)?A:A-u/_,z=A>O?A**U:P*(A-N),B=T*(y>O?y**U:P*(y-N)),H=aa*(x>O?x**U:P*(x-N)),Q=C*B-E*z-F*H,R=m*B+n*z+o*H,G=g*B-k*z+l*H,V=w*(Q<=L?I*Q:J*Q**M-K),X=w*(R<=L?I*R:J*R**M-K),Y=w*(G<=L?I*G:J*G**M-K);q&&(255<e(V,X,Y)||0>d(V,X,Y))?a[b]=a[b+1]=a[b+2]=0:(a[b]=V,a[b+1]=X,a[b+2]=Y)},(a,c,d)=>{const[b,e,f]=x(a,c,d),g=Math.atan2(f,e)*(180/j),h=0>g?g+v:g,i=Math.sqrt(e*e+f*f);return[h/v,i/s,b/D]},'hue','chroma','luminance'],['hsl',(a,b,c,d,e)=>{const f=c*v,g=e+(e<p?e:1-e)*d,h=2*e-g,i=f>=u?f-u:f+r,j=f<r?f+u:f-r;a[b]=w*(i<q?h+(g-h)*i/q:i<t?g:i<u?h+(g-h)*(u-i)/q:h),a[b+1]=w*(f<q?h+(g-h)*f/q:f<t?g:f<u?h+(g-h)*(u-f)/q:h),a[b+2]=w*(j<q?h+(g-h)*j/q:j<t?g:j<u?h+(g-h)*(u-j)/q:h)},(a,c,f)=>{const b=V(a,c,f),g=d(...b),i=e(...b),j=i-g,k=(i+g)/2||0;if(0==j)return[0,0,k];const l=j/(k<p?i+g:2-i-g),[m,n,o]=b.map((a)=>((i-a)/6+j/2)/j),[q,r]=b,s=q===i?o-n:r===i?Q+m-o:Q+Q+n-m;return[0>s?s+1:1<s?s-1:s,l,k]},'hue','saturation','luminosity'],['hsv',(a,b,c,d,e)=>{if(0===d)return void(a[b]=a[b+1]=a[b+2]=e*w);const f=e*w,g=1===c?0:6*c,h=Math.floor(g),i=g-h,j=f*(1-d),k=f*(1-d*i),l=f*(1-d*(1-i));switch(h){case 0:return a[b]=f,a[b+1]=l,void(a[b+2]=j);case 1:return a[b]=k,a[b+1]=f,void(a[b+2]=j);case 2:return a[b]=j,a[b+1]=f,void(a[b+2]=l);case 3:return a[b]=j,a[b+1]=k,void(a[b+2]=f);case 4:return a[b]=l,a[b+1]=j,void(a[b+2]=f);default:a[b]=f,a[b+1]=j,a[b+2]=k;}},(a,c,f)=>{const b=V(a,c,f),g=d(...b),i=e(...b),j=i-g;if(0==j)return[0,0,i];const[k,l,m]=b.map((a)=>((i-a)/6+j/2)/j),[n,o]=b,p=n===i?m-l:o===i?Q+k-m:Q+Q+l-k;return[0>p?p+1:1<p?p-1:p,j/i,i]},'hue','saturation','value'],['lab',(a,b,i,j,p,q)=>{const r=j*c-h,s=p*c-h,t=(i*D+W)/$,u=f(r)?t:t+r/S,v=f(s)?t:t-s/_,x=t>O?t**U:P*(t-N),y=T*(u>O?u**U:P*(u-N)),z=aa*(v>O?v**U:P*(v-N)),A=C*y-E*x-F*z,B=m*y+n*x+o*z,G=g*y-k*x+l*z,H=w*(A<=L?I*A:J*A**M-K),Q=w*(B<=L?I*B:J*B**M-K),R=w*(G<=L?I*G:J*G**M-K);q&&(255<e(H,Q,R)||0>d(H,Q,R))?a[b]=a[b+1]=a[b+2]=0:(a[b]=H,a[b+1]=Q,a[b+2]=R)},(a,d,e)=>{const[b,f,g]=x(a,d,e);return[b/100,(f+h)/c,(g+h)/c]},'lightness','red to green','blue to yellow'],['rgb',(a,b,c,d,e)=>{var f=Math.round;a[b]=f(c*w),a[b+1]=f(d*w),a[b+2]=f(e*w)},V,'red','green','blue']].reduce((a,[b,c,d,e,f,g])=>{const[h,i,j]=b;return a[b]={labels:[e,f,g],name:b,write:c,fromRGB:d},b=[h,j,i].join(''),a[b]={name:b,labels:[e,g,f],write:(a,b,d,e,f,g)=>c(a,b,d,f,e,g),fromRGB:(a,c,e)=>{const[b,f,g]=d(a,c,e);return[b,g,f]}},b=[i,h,j].join(''),a[b]={name:b,labels:[f,e,g],write:(a,b,d,e,f,g)=>c(a,b,e,d,f,g),fromRGB:(a,c,e)=>{const[b,f,g]=d(a,c,e);return[f,b,g]}},b=[i,j,h].join(''),a[b]={name:b,labels:[f,g,e],write:(a,b,d,e,f,g)=>c(a,b,f,d,e,g),fromRGB:(a,c,e)=>{const[b,f,g]=d(a,c,e);return[f,g,b]}},b=[j,h,i].join(''),a[b]={name:b,labels:[g,e,f],write:(a,b,d,e,f,g)=>c(a,b,e,f,d,g),fromRGB:(a,c,e)=>{const[b,f,g]=d(a,c,e);return[g,b,f]}},b=[j,i,h].join(''),a[b]={name:b,labels:[g,f,e],write:(a,b,d,e,f,g)=>c(a,b,f,e,d,g),fromRGB:(a,c,e)=>{const[b,f,g]=d(a,c,e);return[g,f,b]}},a},{});const y=new Set(['','auto','currentColor','inherit','transparent','unset']),z=/^\s*#?([\da-f])([\da-f])([\da-f])\s*$/i,B=/^\s*#?([\da-f]{2})([\da-f]{2})([\da-f]{2})(?:[\da-f]{2})?\s*$/i,G=/rgba?\((\d+),\s*(\d+),\s*(\d+)/,R=(a)=>(a<<4)+a,X=(a)=>{const b=document.createElement('div');Object.assign(b.style,{color:a,position:'absolute'}),document.body.appendChild(b);const c=getComputedStyle(b).color;b.remove();const d=G.exec(c);if(d)return d.slice(1).map(Y)},Y=(b)=>a(b),Z=(b)=>a(b,16),ba=(a)=>a.toString(16).padStart(2,0).toUpperCase(),ca=(a)=>{if('string'==typeof a){let b;return(b=a.match(B))?b.slice(1).map(Z):(b=a.match(z))?b.slice(1).map(Z).map(R):(a=a.trim(),y.has(a)?void 0:X(a))}},da=(a)=>`#${a.map(ba).join('')}`,ea='CI_CONTAINER',fa='CI_GUTTER',ga='CI_XY_CANVAS',ha='CI_XY',ia='CI_XY_NUB',ja='CI_Z_CANVAS',ka='CI_Z',la='CI_Z_NUB',ma='20px',na='15px',oa='35px',pa=120;var qa=Object.assign(document.createElement('template'),{innerHTML:`
    <style>
      :host {
        contain          : strict;
        display          : block;
        height           : 230px;
        width            : 275px;
      }

      #${ea} {
        box-sizing       : border-box;
        display          : flex;
        height           : 100%;
        left             : 0;
        outline-offset   : -5px; /* will be truncated otherwise */
        overflow         : hidden;
        padding          : var(
          --color-input-slider-radius, ${na}
        );
        position         : absolute;
        top              : 0;
        user-select      : none;
        width            : 100%;
      }

      #${fa} {
        flex             : 0 0 ${ma};
      }

      #${ga},
      #${ja} {
        cursor           : pointer;
        height           : 100%;
        transform        : translateZ(0);
        width            : 100%;
      }

      #${ga} {
        border           : var(--color-input-xy-border);
        border-radius    : var(--color-input-xy-border-radius);
      }

      #${ga}:focus {
        outline          : var(
          --color-input-xy-focus-outline,
          -webkit-focus-ring-color auto 5px
        );
        outline-offset   : var(--color-input-xy-focus-outline-offset, 0px);
      }

      #${ja} {
        border           : var(--color-input-z-border);
        border-radius    : var(--color-input-z-border-radius);
      }

      #${ja}:focus {
        outline          : var(
          --color-input-z-focus-outline,
          -webkit-focus-ring-color auto 5px
        );
        outline-offset   : var(--color-input-z-focus-outline-offset, 0px);
      }

      #${ha},
      #${ka} {
        align-items      : center;
        box-sizing       : border-box;
        display          : flex;
        flex-shrink      : 0;
        justify-content  : center;
        overflow         : visible;
        position         : relative;
      }

      #${ha} {
        flex-basis       : 0;
        flex-grow        : 1;
      }

      #${ka} {
        flex-basis       : ${oa};
      }

      #${ia},
      #${la} {
        border-style     : solid;
        border-width     : 2px;
        border-radius    : calc(2 * var(
          --color-input-slider-radius, ${na}
        ));
        bottom           : 0;
        box-sizing       : border-box;
        cursor           : pointer;
        height           : calc(2 * var(
          --color-input-slider-radius, ${na}
        ));
        margin-bottom    : calc(0px - var(
          --color-input-slider-radius, ${na}
        ));
        position         : absolute;
        transform        : scale(var(--color-input-slider-scale, 0.667));
        transform-origin : center;
        transition       : transform 80ms ease, border-color 100ms ease;
        width            : calc(2 * var(
          --color-input-slider-radius, ${na}
        ));
      }

      #${ia}.dragging,
      #${la}.dragging {
        transform: none;
      }

      #${ia}.initial-movement,
      #${la}.initial-movement {
        transition:
          background-color 80ms  ease,
          border-color     100ms ease,
          bottom           ${pa}ms ease,
          left             ${pa}ms ease,
          transform        80ms  ease;
      }

      #${ia} {
        left             : 0;
        margin-left      : calc(0px - var(
          --color-input-slider-radius, ${na}
        ));
      }

      #${la}.vertical {
        margin-left      : calc(0px - var(
          --color-input-slider-radius, ${na}
        ));
      }
    </style>

    <div
      id="${ea}"
      tabindex="0">

      <div id="${ha}">
        <canvas
          height="0"
          id="${ga}"
          tabindex="0"
          width="0">
        </canvas>
        <div id="${ia}"></div>
      </div>

      <div id="${fa}"></div>

      <div id="${ka}">
        <canvas
          height="0"
          id="${ja}"
          tabindex="0"
          width="0">
        </canvas>
        <div id="${la}"></div>
      </div>
    </div>
  `});const ra=new Set(['ArrowDown','ArrowLeft','ArrowRight','ArrowUp']),sa='direction',ta='--color-input-gutter-width',ua='--color-input-high-res',va='--color-input-x-axis-direction',wa='--color-input-y-axis-direction',xa='--color-input-z-axis-direction',ya='--color-input-z-axis-position',za='--color-input-z-axis-width',Aa='ascending',Ba='end',Ca=[[sa,'ltr'],[ta,ma],[ua,'false'],[va,Aa],[wa,Aa],[xa,Aa],[ya,Ba],[za,oa]],Da=4/7,Ea=20,Fa=new Set(['bottom','end','left','right','start','top']),Ga=(a)=>([b,c])=>[b,a.getPropertyValue(b).trim()||c];class ColorInputInternal{constructor(a,c){const d=document.importNode(qa.content,!0);this.$host=c,this.$container=d.getElementById(ea),this.$gutter=d.getElementById(fa),this.$xy=d.getElementById(ha),this.$xyCanvas=d.getElementById(ga),this.$xyNub=d.getElementById(ia),this.$z=d.getElementById(ka),this.$zCanvas=d.getElementById(ja),this.$zNub=d.getElementById(la),this.colorAccess=new Map,this.mode=b.hlc,this.noClamp=!1,this._deregs=new Set,this._raf=void 0,this._rafFn=()=>{this.render(),this._raf=requestAnimationFrame(this._rafFn)},this.defaultValue=void 0,this.dirty=!1,this.hasValue=!1,this.css=new Map,this.highRes=!1,this.highResAuto=1<window.devicePixelRatio,this.horizontal=!0,this.xDescending=!1,this.yDescending=!1,this.zDescending=!1,this.zPosition='end',this.xyContext=this.$xyCanvas.getContext('2d',{alpha:!1}),this.xyImage=this.xyContext.createImageData(1,1),this.zContext=this.$zCanvas.getContext('2d',{alpha:!1}),this.zImage=this.zContext.createImageData(1,1),this.zImage.data.fill(255),this.xyImage.data.fill(255),this.xAxisValue=0,this.yAxisValue=0,this.zAxisValue=0,this._dragging=!1,this._renderXY=!0,this._renderZ=!0,this._transientX=void 0,this._transientY=void 0,this._transientZ=void 0,a.append(d),this.setLabels()}get effectiveX(){return this._transientX===void 0?this.xAxisValue:this._transientX}get effectiveY(){return this._transientY===void 0?this.yAxisValue:this._transientY}get effectiveZ(){return this._transientZ===void 0?this.zAxisValue:this._transientZ}get xyHeight(){return this.highRes?this.$xyCanvas.height/2:this.$xyCanvas.height}get xyWidth(){return this.highRes?this.$xyCanvas.width/2:this.$xyCanvas.width}get zHeight(){return this.highRes?this.$zCanvas.height/2:this.$zCanvas.height}get zWidth(){return this.highRes?this.$zCanvas.width/2:this.$zCanvas.width}connect(){this._rafFn(),this.listen()}disconnect(){cancelAnimationFrame(this._raf),this._deregs.forEach((a)=>a()),this._deregs.clear()}effectiveSelectionAsRGB(){const{mode:a,effectiveX:b,effectiveY:c,effectiveZ:d}=this,e=new Uint8ClampedArray(3);return a.write(e,0,b,c,d,!1),e}listen(){let a,b,c;const f=(c)=>{clearTimeout(b),this.setXYTentativelyFromEvent(c),this._dragging=!0,this.$xyNub.classList.add('dragging','initial-movement'),b=setTimeout(()=>this.$xyNub.classList.remove('initial-movement'),pa);const f=()=>{document.removeEventListener('blur',f),document.removeEventListener('mousemove',g),document.removeEventListener('mouseup',h),this.$xyCanvas.removeEventListener('blur',f),this.$xyNub.classList.remove('dragging'),this._deregs.delete(f),this._dragging=!1,this._renderZ=!0,this._transientX=void 0,this._transientY=void 0,a=void 0},g=({clientX:a,clientY:b})=>{const{bottom:c,left:f,right:g,top:h}=this.$xyCanvas.getBoundingClientRect(),i=d(e(f,a),g)-f,j=d(e(h,b),c)-h;this.setXYTentativelyFromEvent({offsetX:i,offsetY:j})},h=({clientX:a,clientY:b})=>{const{bottom:c,left:d,right:e,top:g}=this.$xyCanvas.getBoundingClientRect();a+Ea>=d&&a-Ea<=e&&b+Ea>=g&&b-Ea<=c&&(this.xAxisValue=this._transientX,this.yAxisValue=this._transientY,this._renderZ=!0,this.signalChange()),f()};document.addEventListener('blur',f),document.addEventListener('mousemove',g),document.addEventListener('mouseup',h),this.$xyCanvas.addEventListener('blur',f),a=f,this._deregs.add(f)},g=(a)=>{const{clientX:b,clientY:c}=a,{bottom:g,left:h,right:i,top:j}=this.$xyCanvas.getBoundingClientRect(),k=d(e(h,b),i)-h,l=d(e(j,c),g)-j;this.$xyCanvas.focus(),a.preventDefault(),f({offsetX:k,offsetY:l})},h=(b)=>{clearTimeout(c),this.setZTentativelyFromEvent(b),this._dragging=!0,this.$zNub.classList.add('dragging','initial-movement'),c=setTimeout(()=>this.$zNub.classList.remove('initial-movement'),pa);const f=()=>{document.removeEventListener('blur',f),document.removeEventListener('mousemove',g),document.removeEventListener('mouseup',h),this.$zCanvas.removeEventListener('blur',f),this.$zNub.classList.remove('dragging'),this._deregs.delete(f),this._dragging=!1,this._renderXY=!0,this._transientZ=void 0,a=void 0},g=({clientX:a,clientY:b})=>{const{bottom:c,left:f,right:g,top:h}=this.$zCanvas.getBoundingClientRect(),i=d(e(f,a),g)-f,j=d(e(h,b),c)-h;this.setZTentativelyFromEvent({offsetX:i,offsetY:j})},h=({clientX:a,clientY:b})=>{const{bottom:c,left:d,right:e,top:g}=this.$zCanvas.getBoundingClientRect();a+Ea>=d&&a-Ea<=e&&b+Ea>=g&&b-Ea<=c&&(this.zAxisValue=this._transientZ,this._renderXY=!0,this.signalChange()),f()};document.addEventListener('blur',f),document.addEventListener('mousemove',g),document.addEventListener('mouseup',h),this.$zCanvas.addEventListener('blur',f),a=f,this._deregs.add(f)},i=(a)=>{const{clientX:b,clientY:c}=a,{bottom:f,left:g,right:i,top:j}=this.$zCanvas.getBoundingClientRect(),k=d(e(g,b),i)-g,l=d(e(j,c),f)-j;this.$zCanvas.focus(),a.preventDefault(),h({offsetX:k,offsetY:l})},j=(b)=>{b.defaultPrevented||this._dragging&&'Escape'===b.key&&(a&&a(),b.preventDefault())},k=(a)=>{if(ra.has(a.key)&&!this._dragging){const[b,c]=this.xDescending?['ArrowLeft','ArrowRight']:['ArrowRight','ArrowLeft'],[f,g]=this.yDescending?['ArrowDown','ArrowUp']:['ArrowUp','ArrowDown'],h=a.shiftKey?0.1:0.01;switch(a.key){case b:this.xAxisValue=d(1,this.xAxisValue+h),this._renderZ=!0,this.signalChange();break;case c:this.xAxisValue=e(0,this.xAxisValue-h),this._renderZ=!0,this.signalChange();break;case f:this.yAxisValue=d(1,this.yAxisValue+h),this._renderZ=!0,this.signalChange();break;case g:this.yAxisValue=e(0,this.yAxisValue-h),this._renderZ=!0,this.signalChange();}a.preventDefault()}},l=(a)=>{if(ra.has(a.key)&&!this._dragging){const b=this.horizontal?['ArrowUp','ArrowDown']:['ArrowRight','ArrowLeft'];this.zDescending&&b.reverse();const[c,f]=b,g=a.shiftKey?0.1:0.01;switch(a.key){case c:this.zAxisValue=d(1,this.zAxisValue+g),this._renderXY=!0,this.signalChange();break;case f:this.zAxisValue=e(0,this.zAxisValue-g),this._renderXY=!0,this.signalChange();}a.preventDefault()}};this.$xyCanvas.addEventListener('mousedown',f),this.$xyCanvas.addEventListener('keydown',k),this.$xyNub.addEventListener('mousedown',g),this.$zCanvas.addEventListener('mousedown',h),this.$zCanvas.addEventListener('keydown',l),this.$zNub.addEventListener('mousedown',i),this.$container.addEventListener('keydown',j),this._deregs.add(()=>this.$xyCanvas.removeEventListener('mousedown',f)).add(()=>this.$xyCanvas.removeEventListener('keydown',k)).add(()=>this.$xyNub.removeEventListener('mousedown',g)).add(()=>this.$zCanvas.removeEventListener('mousedown',h)).add(()=>this.$zCanvas.removeEventListener('keydown',l)).add(()=>this.$zNub.removeEventListener('mousedown',i)).add(()=>this.$container.removeEventListener('keydown',j))}render(){this.updateFromCSS(),this.updateFromDimensions(),(this._renderZ||this._renderXY)&&this.setXYZNubColors(),this._renderZ&&(this._renderZ=!1,this.setXYNubPosition(),this.renderZ()),this._renderXY&&(this._renderXY=!1,this.setZNubPosition(),this.renderXY())}renderXY(){const{noClamp:a,xDescending:b,yDescending:c,effectiveZ:d}=this,{data:e,height:f,width:g}=this.xyImage,{write:h}=this.mode,j=f-1;let k=0;for(let i=0;i<f;i++){const f=c?i/j||0:1-(i/j||0);for(let i=0;i<g;i++){const c=i/(g-1)||0;h(e,k,b?1-c:c,f,d,a),k+=4}}this.xyContext.putImageData(this.xyImage,0,0)}renderZ(){const{noClamp:a,effectiveX:b,effectiveY:c,mode:{write:d}}=this,{data:e}=this.zImage,{length:f}=e,g=this.horizontal!==this.zDescending;for(let h=0;h<f;h+=4){const i=h/(f-4)||0;d(e,h,b,c,g?1-i:i,a)}this.zContext.putImageData(this.zImage,0,0)}selectionAsRGB(){const{mode:a,xAxisValue:b,yAxisValue:c,zAxisValue:d}=this,e=new Uint8ClampedArray(3);return a.write(e,0,b,c,d,!1),e}setDefaultValue(a){this.defaultValue=ca(a),this.dirty||(this.setSelectionFromRGB(this.defaultValue||[0,0,0]),this.hasValue=!!this.defaultValue)}setDirectionsFromCSS(){const a='descending'===this.css.get(va),b='descending'===this.css.get(wa),c='descending'===this.css.get(xa);(this.xDescending!==a||this.yDescending!==b)&&(this.xDescending=a,this.yDescending=b),this.zDescending!==c&&(this.zDescending=c),this._renderXY=!0,this._renderZ=!0,this.setLabels()}setGutterAndZWidthFromCSS(a){const b=this.css.get(ta),c=this.css.get(za);a&&(this.$gutter.style.flexBasis=b),this.$z.style.flexBasis=`calc(${c} - (${b} / 2))`}setLabels(){}setOrientationFromCSS(a,b){if(a){const a=this.css.get(ya),c=Fa.has(a)?a:Ba,d='top'!==c&&'bottom'!==c;if(d!==this.horizontal&&(this.$zNub.classList[d?'remove':'add']('vertical'),this.horizontal=d,this._renderZ=!0),this.zPosition===c&&!b)return;this.zPosition=c}this.$container.style.flexDirection='start'===this.zPosition?'row-reverse':'end'===this.zPosition?'row':'top'===this.zPosition?'column-reverse':'bottom'===this.zPosition?'column':'left'===this.zPosition?'ltr'===this.css.get(sa)?'row-reverse':'row':'rtl'===this.css.get(sa)?'row-reverse':'row'}setResolutionFromCSS(){const a=this.css.get(ua),b='true'===a||!('auto'!==a)&&this.highResAuto;this.highRes!==b&&(this.highRes=b,this._renderXY=!0,this._renderZ=!0)}setSelectionFromRGB(a){[this.xAxisValue,this.yAxisValue,this.zAxisValue]=this.mode.fromRGB(...a),this._dragging||(this._renderXY=!0,this._renderZ=!0)}setXYNubPosition(){const a=100*(this.xDescending?1-this.effectiveX:this.effectiveX),b=100*(this.yDescending?1-this.effectiveY:this.effectiveY);this.$xyNub.style.left=`${a}%`,this.$xyNub.style.bottom=`${b}%`}setXYTentativelyFromEvent({offsetX:a,offsetY:b}){const c=a/this.xyWidth||0,d=b/this.xyHeight||0,e=this.xDescending?1-c:c,f=this.yDescending?d:1-d;(this._transientX!==e||this._transientY!==f)&&(this._renderZ=!0,this._transientX=e,this._transientY=f)}setXYZNubColors(){const a=this.effectiveSelectionAsRGB();this.$zNub.style.backgroundColor=this.$xyNub.style.backgroundColor=da([...a]);const c=b.hcl.fromRGB(...a),d=c[2];d<2/3?c[2]+=(1-d)*Da:c[2]-=d*Da,b.hcl.write(a,0,...c,!1),this.$zNub.style.borderColor=this.$xyNub.style.borderColor=da([...a])}setZNubPosition(){const a=100*(this.zDescending?1-this.effectiveZ:this.effectiveZ);this.horizontal?(this.$zNub.style.left='inherit',this.$zNub.style.bottom=`${a}%`):(this.$zNub.style.left=`${a}%`,this.$zNub.style.bottom='inherit')}setZTentativelyFromEvent({offsetX:a,offsetY:b}){const[c,d]=this.horizontal?[b,this.zHeight]:[a,this.zWidth],e=c/d||0,f=this.zDescending===this.horizontal?e:1-e;this._transientZ!==f&&(this._renderXY=!0,this._transientZ=f)}signalChange(){if(this.noClamp){const{mode:a,xAxisValue:b,yAxisValue:c,zAxisValue:d}=this,e=[];a.write(e,0,b,c,d,!1),e.some((a)=>255<a||0>a)&&([this.xAxisValue,this.yAxisValue,this.zAxisValue]=this.mode.fromRGB(...Uint8ClampedArray.from(e)),this._renderXY=!0,this._renderZ=!0)}this.dirty=!0,this.$host.dispatchEvent(new CustomEvent('change'))}updateFromCSS(){const a=window.getComputedStyle(this.$container),b=Ca.map(Ga(a)),c=new Map(b.filter(([a,b])=>this.css.get(a)!==b));if(c.size){this.css=new Map(b);const a=c.has(sa),d=c.has(ta),e=c.has(ua),f=c.has(ya),g=c.has(va),h=c.has(wa),i=c.has(xa),j=c.has(za);(f||a)&&this.setOrientationFromCSS(f,a),(d||j)&&this.setGutterAndZWidthFromCSS(d),e&&this.setResolutionFromCSS(),(g||h||i)&&this.setDirectionsFromCSS()}}updateFromDimensions(){let{clientWidth:a,clientHeight:b}=this.$xy,{clientWidth:c,clientHeight:d}=this.$z;this.highRes&&(b*=2,a*=2,d*=2,c*=2),b=b||1,a=a||1,d=this.horizontal?d||1:1,c=this.horizontal?1:c||1,(this.xyImage.width!==a||this.xyImage.height!==b)&&(this._renderXY=!0,this.$xyCanvas.width=a,this.$xyCanvas.height=b,this.xyImage=this.xyContext.createImageData(a,b),this.xyImage.data.fill(255)),(this.zImage.width!==c||this.zImage.height!==d)&&(this._renderZ=!0,this.$zCanvas.width=c,this.$zCanvas.height=d,this.zImage=this.zContext.createImageData(c,d),this.zImage.data.fill(255))}updateTabIndex(){this.$host.hasAttribute('tabindex')?this.$container.removeAttribute('tabindex'):this.$container.setAttribute('tabindex','0')}}const Ha=new WeakMap,Ia=(a,[b,c],[f,g],[h,i])=>{const[j,k,l]=a.name,m=[[j,b,c],[k,f,g],[l,h,i]],n=(b)=>Object.create(Object.prototype,m.reduce((c,[f,g,h],i)=>{return c[f]={get(){if(b.hasValue){const c=a.fromRGB(...b.selectionAsRGB())[i];return c*h-g}},set(c){c=+c,c=Number.isFinite(c)?c:0,c=d(h,e(g,c))+g;const f=a.fromRGB(...b.selectionAsRGB()),j=new Uint8ClampedArray(3);f[i]=c/(h-g),a.write(j,0,...f),b.$host.value=da(Array.from(j))}},c},{}));return{get(){const b=Ha.get(this);return b.colorAccess.has(a)||b.colorAccess.set(a,n(b)),b.colorAccess.get(a)}}};class ColorInputElement extends HTMLElement{constructor(){super(),Ha.set(this,new ColorInputInternal(this.attachShadow({mode:'open'}),this))}get clamp(){return!Ha.get(this).clamp}set clamp(a){const b=!1===a,c=Ha.get(this);c.noClamp!==b&&(c.noClamp=b,c._renderXY=!0,c._renderZ=!0);const d=!b+'';d!==(this.getAttribute('clamp')||'').toLowerCase().trim()&&this.setAttribute('clamp',d)}get mode(){return Ha.get(this).mode.name}set mode(a){const c=b[(a+'').toLowerCase()]||b.hlc,d=Ha.get(this);if(d.mode!==c){const a=d.selectionAsRGB();d.mode=c,d.setSelectionFromRGB(a),this.mode!==(this.getAttribute('mode')||'').toLowerCase().trim()&&this.setAttribute('mode',c.name),d.setLabels()}}get value(){const a=Ha.get(this);return a.hasValue?da([...a.selectionAsRGB()]):''}set value(a){const b=ca(a+''),c=Ha.get(this);c.dirty=!0,b?(c.setSelectionFromRGB(b),c.hasValue=!0):c.hasValue=!1,c.signalChange()}get valueAsNumber(){const a=Ha.get(this);return a.hasValue?a.selectionAsRGB().reduce((a,b)=>(a<<8)+b,0):NaN}set valueAsNumber(a){if(a=+a,!Number.isInteger(a))throw new TypeError('Failed to set the \'valueAsNumber\' property on ColorInputElement: The value provided is not an integer.');if(0>a||16777215<a)throw new RangeError('Failed to set the \'valueAsNumber\' property on ColorInputElement: The value provided is out of range.');this.value=`#${a.toString(16).padStart(6,0)}`}attributeChangedCallback(a,b,c){if(c=(c||'').trim().toLowerCase(),b=(b||'').trim().toLowerCase(),c!==b)switch(c='true'===c||'false'!==c&&c,a){case'clamp':return void(this.clamp=c);case'mode':return void(this.mode=c);case'name':return void(this.name=c);case'tabindex':return void Ha.get(this).updateTabIndex();case'value':Ha.get(this).setDefaultValue(c);}}connectedCallback(){Ha.get(this).connect()}disconnectedCallback(){Ha.get(this).disconnect()}}Object.defineProperties(ColorInputElement,{observedAttributes:{value:Object.freeze(['clamp','mode','name','tabindex','value'])}}),Object.defineProperties(ColorInputElement.prototype,{hcl:Ia(b.hcl,[0,360],[0,134],[0,100]),hsl:Ia(b.hsl,[0,360],[0,100],[0,100]),hsv:Ia(b.hsv,[0,360],[0,100],[0,100]),lab:Ia(b.lab,[0,100],[-110,110],[-110,110]),rgb:Ia(b.rgb,[0,255],[0,255],[0,255])}),Object.freeze(ColorInputElement),Object.freeze(ColorInputElement.prototype);((a='color-input')=>{customElements.define(a,ColorInputElement)})()})();
